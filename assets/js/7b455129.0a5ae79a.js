"use strict";(self.webpackChunkminetrax_github_io=self.webpackChunkminetrax_github_io||[]).push([[1468],{6867:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>l,frontMatter:()=>r,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"web/websocket-options","title":"WebSocket Options","description":"It is recommended you keep running Pusher and switch to alternative methods only if Pusher free plan doesn\'t meet your needs.","source":"@site/docs/web/websocket-options.md","sourceDirName":"web","slug":"/web/websocket-options","permalink":"/docs/web/websocket-options","draft":false,"unlisted":false,"editUrl":"https://github.com/minetrax/minetrax.github.io/edit/main/docs/web/websocket-options.md","tags":[],"version":"current","sidebarPosition":90,"frontMatter":{"sidebar_position":90,"title":"WebSocket Options","id":"websocket-options"},"sidebar":"tutorialSidebar","previous":{"title":"Console Commands","permalink":"/docs/web/console-commands"},"next":{"title":"Backup Site","permalink":"/docs/web/backup"}}');var s=o(4848),i=o(8453);const r={sidebar_position:90,title:"WebSocket Options",id:"websocket-options"},c=void 0,a={},d=[{value:"Socketi",id:"socketi",level:2}];function p(e){const t={a:"a",admonition:"admonition",h2:"h2",p:"p",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.admonition,{title:"Try pusher first",type:"info",children:(0,s.jsx)(t.p,{children:"It is recommended you keep running Pusher and switch to alternative methods only if Pusher free plan doesn't meet your needs."})}),"\n",(0,s.jsxs)(t.p,{children:["In the Getting Started section we setup ",(0,s.jsx)(t.a,{href:"https://pusher.com",children:"Pusher"})," as our websocket server."]}),"\n",(0,s.jsx)(t.p,{children:"Pusher free tier provides 200k push messages per day and 100 concurrent connections. This might not be enough when your audience is large. Ofcoz you can opt for paid plan of Pusher to remove these limitations but that might get costly."}),"\n",(0,s.jsxs)(t.p,{children:["Here we are going to discuss about a self-hosted alternative which won't have any limitations and supports pusher protocol: ",(0,s.jsx)(t.a,{href:"https://docs.soketi.app/",children:"Socketi"})]}),"\n",(0,s.jsx)(t.h2,{id:"socketi",children:"Socketi"}),"\n",(0,s.jsx)(t.admonition,{type:"info",children:(0,s.jsxs)(t.p,{children:["Visit soketi docs for detailed explanation: ",(0,s.jsx)(t.a,{href:"https://docs.soketi.app/",children:"https://docs.soketi.app/"})]})}),"\n",(0,s.jsx)(t.admonition,{title:"Docs In Progress",type:"caution",children:(0,s.jsxs)(t.p,{children:["If you want to use Socketi, for now you can follow their official docs ",(0,s.jsx)(t.a,{href:"https://docs.soketi.app/getting-started/installation/cli-installation",children:"here"})]})})]})}function l(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},8453:(e,t,o)=>{o.d(t,{R:()=>r,x:()=>c});var n=o(6540);const s={},i=n.createContext(s);function r(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);